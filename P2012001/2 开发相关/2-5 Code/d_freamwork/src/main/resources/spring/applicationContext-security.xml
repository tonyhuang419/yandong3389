<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/security"
    xmlns:beans="http://www.springframework.org/schema/beans"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xsi:schemaLocation="http://www.springframework.org/schema/beans
           http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
           http://www.springframework.org/schema/security
           http://www.springframework.org/schema/security/spring-security-3.0.xsd">
	
	<beans:description>SpringSecurity安全配置</beans:description>
	
	<!-- http安全配置 -->
 	 <http auto-config="true">
		<intercept-url pattern="/css/**" filters="none" />
		<intercept-url pattern="/images/**" filters="none" />
		<intercept-url pattern="/js/**" filters="none" />
		<intercept-url pattern="/login.jsp" filters="none" />
		<!--  
		<intercept-url pattern="/index.jsp"  access="ROLE_USER"/>
		<intercept-url pattern="/main.jsp"  access="ROLE_ADMIN"/>
	  	-->
 
		<form-login login-page="/login.jsp"
			 authentication-success-handler-ref="authStru2MenuFilter"  
			 authentication-failure-url="/login.jsp?error=1" 
		/>
	  
		<http-basic/>
		
		<!-- 尝试访问没有权限的页面时跳转的页面 -->   
		<access-denied-handler error-page="/common/403.jsp"/> 
		<!-- 页面注销完毕后显示的页面 -->
		<logout logout-success-url="/login.jsp" />
		<!-- 控制多用户登陆 -->
		<session-management>
        	<concurrency-control max-sessions="1" error-if-maximum-exceeded="true" />
   		</session-management>
		
		<!-- 增加一个filter，这点与Acegi是不一样的，不能修改默认的filter了，
		这个filter位于FILTER_SECURITY_INTERCEPTOR之前  -->
        <custom-filter ref="myFilter" before="FILTER_SECURITY_INTERCEPTOR"/>
        <!-- 
        <custom-filter ref="authStru2MenuFilter" after="FORM_LOGIN_FILTER"/>
         -->
	 </http>

	<!-- 一个自定义的filter，必须包含authenticationManager,accessDecisionManager,securityMetadataSource三个属性，
    	我们的所有控制将在这三个类中实现，解释详见具体配置  -->
    <beans:bean id="myFilter" class="com.rstco.frame.pub.security.interceptor.MyFilterSecurityInterceptor">
        <beans:property name="authenticationManager"
            ref="authenticationManager" />
        <beans:property name="accessDecisionManager"
            ref="myAccessDecisionManagerBean" />
        <beans:property name="securityMetadataSource"
            ref="mySecurityMetadataSource" />
    </beans:bean>
    
    <!-- 当认证成功后自动加载struts2menu菜单项 -->
    <beans:bean id="authStru2MenuFilter" class="com.rstco.frame.modules.ui.webapp.AuthenticationProcessingStrutsMenuSupportFilter">
    </beans:bean>
	
	<!-- 验证配置 ， 认证管理器，实现用户认证的入口，主要实现UserDetailsService接口即可 -->
 	<authentication-manager alias="authenticationManager"> 
	 	 
		<authentication-provider user-service-ref="userDetailsService">
		   <!--
			<s:password-encoder hash="sha" />
			 -->
		</authentication-provider>
		 
	</authentication-manager>
	
	<!-- 项目实现的用户查询服务,将用户信息查询出来  -->
	<beans:bean id="userDetailsService" class="com.rstco.frame.pub.security.support.MyUserDetailService" />

	<!-- 访问决策器，决定某个用户具有的角色，是否有足够的权限去访问某个资源     -->
    <beans:bean id="myAccessDecisionManagerBean"
        class="com.rstco.frame.pub.security.support.MyAccessDecisionManager">
    </beans:bean>
 
    <!-- 资源源数据定义，将所有的资源和权限对应关系建立起来，即定义某一资源可以被哪些角色访问 	-->
    <beans:bean id="mySecurityMetadataSource"
        class="com.rstco.frame.pub.security.support.MyInvocationSecurityMetadataSourceService">
    </beans:bean>
    
 	    
    <!-- 定义国际化 -->
    <beans:bean id="messageSource"
   		 class="org.springframework.context.support.ReloadableResourceBundleMessageSource">
 		 <beans:property name="basename" 
 		 	value="classpath:org/springframework/security/messages_zh_CN"/>
	</beans:bean>

    
 <!-- 加载struts menu 菜单。The menuConfig property is an optional attribute.  It is set to   
    /WEB-INF/menu-config.xml by default.--> 
 	<beans:bean id="strutsMenuBuilder"
		class="com.rstco.frame.modules.ui.struts2menu.StrutsMenuBuilderImpl">
		<beans:property name="menuItemProvider">
			<beans:ref local="menuItemProvider"></beans:ref>
		</beans:property>
		<beans:property name="menuConfig">
			<beans:value>/WEB-INF/conf/menu-config.xml</beans:value>
		</beans:property>
	</beans:bean>

	<beans:bean id="menuItemProvider"
		class="com.rstco.frame.modules.ui.struts2menu.MenuItemDaoProvider">
		<beans:property name="dataSource">
			<beans:ref bean="dataSource"></beans:ref>
		</beans:property>
	</beans:bean>
   	 
 </beans:beans>
 